<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>